<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>